<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>